<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>